<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>